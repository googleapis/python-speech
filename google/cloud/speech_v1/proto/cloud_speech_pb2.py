# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/speech_v1/proto/cloud_speech.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode("latin1"))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.api import client_pb2 as google_dot_api_dot_client__pb2
from google.api import field_behavior_pb2 as google_dot_api_dot_field__behavior__pb2
from google.longrunning import (
    operations_pb2 as google_dot_longrunning_dot_operations__pb2,
)
from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.rpc import status_pb2 as google_dot_rpc_dot_status__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
    name="google/cloud/speech_v1/proto/cloud_speech.proto",
    package="google.cloud.speech.v1",
    syntax="proto3",
    serialized_options=_b(
        "\n\032com.google.cloud.speech.v1B\013SpeechProtoP\001Z<google.golang.org/genproto/googleapis/cloud/speech/v1;speech\370\001\001\242\002\003GCS"
    ),
    serialized_pb=_b(
        '\n/google/cloud/speech_v1/proto/cloud_speech.proto\x12\x16google.cloud.speech.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a#google/longrunning/operations.proto\x1a\x19google/protobuf/any.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17google/rpc/status.proto"\x90\x01\n\x10RecognizeRequest\x12>\n\x06\x63onfig\x18\x01 \x01(\x0b\x32).google.cloud.speech.v1.RecognitionConfigB\x03\xe0\x41\x02\x12<\n\x05\x61udio\x18\x02 \x01(\x0b\x32(.google.cloud.speech.v1.RecognitionAudioB\x03\xe0\x41\x02"\x9b\x01\n\x1bLongRunningRecognizeRequest\x12>\n\x06\x63onfig\x18\x01 \x01(\x0b\x32).google.cloud.speech.v1.RecognitionConfigB\x03\xe0\x41\x02\x12<\n\x05\x61udio\x18\x02 \x01(\x0b\x32(.google.cloud.speech.v1.RecognitionAudioB\x03\xe0\x41\x02"\x99\x01\n\x19StreamingRecognizeRequest\x12N\n\x10streaming_config\x18\x01 \x01(\x0b\x32\x32.google.cloud.speech.v1.StreamingRecognitionConfigH\x00\x12\x17\n\raudio_content\x18\x02 \x01(\x0cH\x00\x42\x13\n\x11streaming_request"\x8f\x01\n\x1aStreamingRecognitionConfig\x12>\n\x06\x63onfig\x18\x01 \x01(\x0b\x32).google.cloud.speech.v1.RecognitionConfigB\x03\xe0\x41\x02\x12\x18\n\x10single_utterance\x18\x02 \x01(\x08\x12\x17\n\x0finterim_results\x18\x03 \x01(\x08"\xdf\x05\n\x11RecognitionConfig\x12I\n\x08\x65ncoding\x18\x01 \x01(\x0e\x32\x37.google.cloud.speech.v1.RecognitionConfig.AudioEncoding\x12\x19\n\x11sample_rate_hertz\x18\x02 \x01(\x05\x12\x1b\n\x13\x61udio_channel_count\x18\x07 \x01(\x05\x12/\n\'enable_separate_recognition_per_channel\x18\x0c \x01(\x08\x12\x1a\n\rlanguage_code\x18\x03 \x01(\tB\x03\xe0\x41\x02\x12\x18\n\x10max_alternatives\x18\x04 \x01(\x05\x12\x18\n\x10profanity_filter\x18\x05 \x01(\x08\x12>\n\x0fspeech_contexts\x18\x06 \x03(\x0b\x32%.google.cloud.speech.v1.SpeechContext\x12 \n\x18\x65nable_word_time_offsets\x18\x08 \x01(\x08\x12$\n\x1c\x65nable_automatic_punctuation\x18\x0b \x01(\x08\x12L\n\x12\x64iarization_config\x18\x13 \x01(\x0b\x32\x30.google.cloud.speech.v1.SpeakerDiarizationConfig\x12=\n\x08metadata\x18\t \x01(\x0b\x32+.google.cloud.speech.v1.RecognitionMetadata\x12\r\n\x05model\x18\r \x01(\t\x12\x14\n\x0cuse_enhanced\x18\x0e \x01(\x08"\x8b\x01\n\rAudioEncoding\x12\x18\n\x14\x45NCODING_UNSPECIFIED\x10\x00\x12\x0c\n\x08LINEAR16\x10\x01\x12\x08\n\x04\x46LAC\x10\x02\x12\t\n\x05MULAW\x10\x03\x12\x07\n\x03\x41MR\x10\x04\x12\n\n\x06\x41MR_WB\x10\x05\x12\x0c\n\x08OGG_OPUS\x10\x06\x12\x1a\n\x16SPEEX_WITH_HEADER_BYTE\x10\x07"\x90\x01\n\x18SpeakerDiarizationConfig\x12"\n\x1a\x65nable_speaker_diarization\x18\x01 \x01(\x08\x12\x19\n\x11min_speaker_count\x18\x02 \x01(\x05\x12\x19\n\x11max_speaker_count\x18\x03 \x01(\x05\x12\x1a\n\x0bspeaker_tag\x18\x05 \x01(\x05\x42\x05\x18\x01\xe0\x41\x03"\xa0\x08\n\x13RecognitionMetadata\x12U\n\x10interaction_type\x18\x01 \x01(\x0e\x32;.google.cloud.speech.v1.RecognitionMetadata.InteractionType\x12$\n\x1cindustry_naics_code_of_audio\x18\x03 \x01(\r\x12[\n\x13microphone_distance\x18\x04 \x01(\x0e\x32>.google.cloud.speech.v1.RecognitionMetadata.MicrophoneDistance\x12Z\n\x13original_media_type\x18\x05 \x01(\x0e\x32=.google.cloud.speech.v1.RecognitionMetadata.OriginalMediaType\x12^\n\x15recording_device_type\x18\x06 \x01(\x0e\x32?.google.cloud.speech.v1.RecognitionMetadata.RecordingDeviceType\x12\x1d\n\x15recording_device_name\x18\x07 \x01(\t\x12\x1a\n\x12original_mime_type\x18\x08 \x01(\t\x12\x13\n\x0b\x61udio_topic\x18\n \x01(\t"\xc5\x01\n\x0fInteractionType\x12 \n\x1cINTERACTION_TYPE_UNSPECIFIED\x10\x00\x12\x0e\n\nDISCUSSION\x10\x01\x12\x10\n\x0cPRESENTATION\x10\x02\x12\x0e\n\nPHONE_CALL\x10\x03\x12\r\n\tVOICEMAIL\x10\x04\x12\x1b\n\x17PROFESSIONALLY_PRODUCED\x10\x05\x12\x10\n\x0cVOICE_SEARCH\x10\x06\x12\x11\n\rVOICE_COMMAND\x10\x07\x12\r\n\tDICTATION\x10\x08"d\n\x12MicrophoneDistance\x12#\n\x1fMICROPHONE_DISTANCE_UNSPECIFIED\x10\x00\x12\r\n\tNEARFIELD\x10\x01\x12\x0c\n\x08MIDFIELD\x10\x02\x12\x0c\n\x08\x46\x41RFIELD\x10\x03"N\n\x11OriginalMediaType\x12#\n\x1fORIGINAL_MEDIA_TYPE_UNSPECIFIED\x10\x00\x12\t\n\x05\x41UDIO\x10\x01\x12\t\n\x05VIDEO\x10\x02"\xa4\x01\n\x13RecordingDeviceType\x12%\n!RECORDING_DEVICE_TYPE_UNSPECIFIED\x10\x00\x12\x0e\n\nSMARTPHONE\x10\x01\x12\x06\n\x02PC\x10\x02\x12\x0e\n\nPHONE_LINE\x10\x03\x12\x0b\n\x07VEHICLE\x10\x04\x12\x18\n\x14OTHER_OUTDOOR_DEVICE\x10\x05\x12\x17\n\x13OTHER_INDOOR_DEVICE\x10\x06" \n\rSpeechContext\x12\x0f\n\x07phrases\x18\x01 \x03(\t"D\n\x10RecognitionAudio\x12\x11\n\x07\x63ontent\x18\x01 \x01(\x0cH\x00\x12\r\n\x03uri\x18\x02 \x01(\tH\x00\x42\x0e\n\x0c\x61udio_source"U\n\x11RecognizeResponse\x12@\n\x07results\x18\x02 \x03(\x0b\x32/.google.cloud.speech.v1.SpeechRecognitionResult"`\n\x1cLongRunningRecognizeResponse\x12@\n\x07results\x18\x02 \x03(\x0b\x32/.google.cloud.speech.v1.SpeechRecognitionResult"\x9e\x01\n\x1cLongRunningRecognizeMetadata\x12\x18\n\x10progress_percent\x18\x01 \x01(\x05\x12.\n\nstart_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x34\n\x10last_update_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp"\xb1\x02\n\x1aStreamingRecognizeResponse\x12!\n\x05\x65rror\x18\x01 \x01(\x0b\x32\x12.google.rpc.Status\x12\x43\n\x07results\x18\x02 \x03(\x0b\x32\x32.google.cloud.speech.v1.StreamingRecognitionResult\x12]\n\x11speech_event_type\x18\x04 \x01(\x0e\x32\x42.google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType"L\n\x0fSpeechEventType\x12\x1c\n\x18SPEECH_EVENT_UNSPECIFIED\x10\x00\x12\x1b\n\x17\x45ND_OF_SINGLE_UTTERANCE\x10\x01"\xf2\x01\n\x1aStreamingRecognitionResult\x12J\n\x0c\x61lternatives\x18\x01 \x03(\x0b\x32\x34.google.cloud.speech.v1.SpeechRecognitionAlternative\x12\x10\n\x08is_final\x18\x02 \x01(\x08\x12\x11\n\tstability\x18\x03 \x01(\x02\x12\x32\n\x0fresult_end_time\x18\x04 \x01(\x0b\x32\x19.google.protobuf.Duration\x12\x13\n\x0b\x63hannel_tag\x18\x05 \x01(\x05\x12\x1a\n\rlanguage_code\x18\x06 \x01(\tB\x03\xe0\x41\x03"z\n\x17SpeechRecognitionResult\x12J\n\x0c\x61lternatives\x18\x01 \x03(\x0b\x32\x34.google.cloud.speech.v1.SpeechRecognitionAlternative\x12\x13\n\x0b\x63hannel_tag\x18\x02 \x01(\x05"w\n\x1cSpeechRecognitionAlternative\x12\x12\n\ntranscript\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x02\x12/\n\x05words\x18\x03 \x03(\x0b\x32 .google.cloud.speech.v1.WordInfo"\x8e\x01\n\x08WordInfo\x12-\n\nstart_time\x18\x01 \x01(\x0b\x32\x19.google.protobuf.Duration\x12+\n\x08\x65nd_time\x18\x02 \x01(\x0b\x32\x19.google.protobuf.Duration\x12\x0c\n\x04word\x18\x03 \x01(\t\x12\x18\n\x0bspeaker_tag\x18\x05 \x01(\x05\x42\x03\xe0\x41\x03\x32\xd1\x04\n\x06Speech\x12\x90\x01\n\tRecognize\x12(.google.cloud.speech.v1.RecognizeRequest\x1a).google.cloud.speech.v1.RecognizeResponse".\x82\xd3\xe4\x93\x02\x19"\x14/v1/speech:recognize:\x01*\xda\x41\x0c\x63onfig,audio\x12\xe4\x01\n\x14LongRunningRecognize\x12\x33.google.cloud.speech.v1.LongRunningRecognizeRequest\x1a\x1d.google.longrunning.Operation"x\x82\xd3\xe4\x93\x02$"\x1f/v1/speech:longrunningrecognize:\x01*\xda\x41\x0c\x63onfig,audio\xca\x41<\n\x1cLongRunningRecognizeResponse\x12\x1cLongRunningRecognizeMetadata\x12\x81\x01\n\x12StreamingRecognize\x12\x31.google.cloud.speech.v1.StreamingRecognizeRequest\x1a\x32.google.cloud.speech.v1.StreamingRecognizeResponse"\x00(\x01\x30\x01\x1aI\xca\x41\x15speech.googleapis.com\xd2\x41.https://www.googleapis.com/auth/cloud-platformBr\n\x1a\x63om.google.cloud.speech.v1B\x0bSpeechProtoP\x01Z<google.golang.org/genproto/googleapis/cloud/speech/v1;speech\xf8\x01\x01\xa2\x02\x03GCSb\x06proto3'
    ),
    dependencies=[
        google_dot_api_dot_annotations__pb2.DESCRIPTOR,
        google_dot_api_dot_client__pb2.DESCRIPTOR,
        google_dot_api_dot_field__behavior__pb2.DESCRIPTOR,
        google_dot_longrunning_dot_operations__pb2.DESCRIPTOR,
        google_dot_protobuf_dot_any__pb2.DESCRIPTOR,
        google_dot_protobuf_dot_duration__pb2.DESCRIPTOR,
        google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,
        google_dot_rpc_dot_status__pb2.DESCRIPTOR,
    ],
)


_RECOGNITIONCONFIG_AUDIOENCODING = _descriptor.EnumDescriptor(
    name="AudioEncoding",
    full_name="google.cloud.speech.v1.RecognitionConfig.AudioEncoding",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="ENCODING_UNSPECIFIED",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="LINEAR16", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="FLAC", index=2, number=2, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="MULAW", index=3, number=3, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="AMR", index=4, number=4, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="AMR_WB", index=5, number=5, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="OGG_OPUS", index=6, number=6, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="SPEEX_WITH_HEADER_BYTE",
            index=7,
            number=7,
            serialized_options=None,
            type=None,
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=1521,
    serialized_end=1660,
)
_sym_db.RegisterEnumDescriptor(_RECOGNITIONCONFIG_AUDIOENCODING)

_RECOGNITIONMETADATA_INTERACTIONTYPE = _descriptor.EnumDescriptor(
    name="InteractionType",
    full_name="google.cloud.speech.v1.RecognitionMetadata.InteractionType",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="INTERACTION_TYPE_UNSPECIFIED",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="DISCUSSION", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="PRESENTATION", index=2, number=2, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="PHONE_CALL", index=3, number=3, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="VOICEMAIL", index=4, number=4, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="PROFESSIONALLY_PRODUCED",
            index=5,
            number=5,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="VOICE_SEARCH", index=6, number=6, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="VOICE_COMMAND", index=7, number=7, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="DICTATION", index=8, number=8, serialized_options=None, type=None
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=2320,
    serialized_end=2517,
)
_sym_db.RegisterEnumDescriptor(_RECOGNITIONMETADATA_INTERACTIONTYPE)

_RECOGNITIONMETADATA_MICROPHONEDISTANCE = _descriptor.EnumDescriptor(
    name="MicrophoneDistance",
    full_name="google.cloud.speech.v1.RecognitionMetadata.MicrophoneDistance",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="MICROPHONE_DISTANCE_UNSPECIFIED",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="NEARFIELD", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="MIDFIELD", index=2, number=2, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="FARFIELD", index=3, number=3, serialized_options=None, type=None
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=2519,
    serialized_end=2619,
)
_sym_db.RegisterEnumDescriptor(_RECOGNITIONMETADATA_MICROPHONEDISTANCE)

_RECOGNITIONMETADATA_ORIGINALMEDIATYPE = _descriptor.EnumDescriptor(
    name="OriginalMediaType",
    full_name="google.cloud.speech.v1.RecognitionMetadata.OriginalMediaType",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="ORIGINAL_MEDIA_TYPE_UNSPECIFIED",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="AUDIO", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="VIDEO", index=2, number=2, serialized_options=None, type=None
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=2621,
    serialized_end=2699,
)
_sym_db.RegisterEnumDescriptor(_RECOGNITIONMETADATA_ORIGINALMEDIATYPE)

_RECOGNITIONMETADATA_RECORDINGDEVICETYPE = _descriptor.EnumDescriptor(
    name="RecordingDeviceType",
    full_name="google.cloud.speech.v1.RecognitionMetadata.RecordingDeviceType",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="RECORDING_DEVICE_TYPE_UNSPECIFIED",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="SMARTPHONE", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="PC", index=2, number=2, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="PHONE_LINE", index=3, number=3, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="VEHICLE", index=4, number=4, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="OTHER_OUTDOOR_DEVICE",
            index=5,
            number=5,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="OTHER_INDOOR_DEVICE",
            index=6,
            number=6,
            serialized_options=None,
            type=None,
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=2702,
    serialized_end=2866,
)
_sym_db.RegisterEnumDescriptor(_RECOGNITIONMETADATA_RECORDINGDEVICETYPE)

_STREAMINGRECOGNIZERESPONSE_SPEECHEVENTTYPE = _descriptor.EnumDescriptor(
    name="SpeechEventType",
    full_name="google.cloud.speech.v1.StreamingRecognizeResponse.SpeechEventType",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="SPEECH_EVENT_UNSPECIFIED",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="END_OF_SINGLE_UTTERANCE",
            index=1,
            number=1,
            serialized_options=None,
            type=None,
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=3548,
    serialized_end=3624,
)
_sym_db.RegisterEnumDescriptor(_STREAMINGRECOGNIZERESPONSE_SPEECHEVENTTYPE)


_RECOGNIZEREQUEST = _descriptor.Descriptor(
    name="RecognizeRequest",
    full_name="google.cloud.speech.v1.RecognizeRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="config",
            full_name="google.cloud.speech.v1.RecognizeRequest.config",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=_b("\340A\002"),
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="audio",
            full_name="google.cloud.speech.v1.RecognizeRequest.audio",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=_b("\340A\002"),
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=318,
    serialized_end=462,
)


_LONGRUNNINGRECOGNIZEREQUEST = _descriptor.Descriptor(
    name="LongRunningRecognizeRequest",
    full_name="google.cloud.speech.v1.LongRunningRecognizeRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="config",
            full_name="google.cloud.speech.v1.LongRunningRecognizeRequest.config",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=_b("\340A\002"),
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="audio",
            full_name="google.cloud.speech.v1.LongRunningRecognizeRequest.audio",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=_b("\340A\002"),
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=465,
    serialized_end=620,
)


_STREAMINGRECOGNIZEREQUEST = _descriptor.Descriptor(
    name="StreamingRecognizeRequest",
    full_name="google.cloud.speech.v1.StreamingRecognizeRequest",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="streaming_config",
            full_name="google.cloud.speech.v1.StreamingRecognizeRequest.streaming_config",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="audio_content",
            full_name="google.cloud.speech.v1.StreamingRecognizeRequest.audio_content",
            index=1,
            number=2,
            type=12,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b(""),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[
        _descriptor.OneofDescriptor(
            name="streaming_request",
            full_name="google.cloud.speech.v1.StreamingRecognizeRequest.streaming_request",
            index=0,
            containing_type=None,
            fields=[],
        )
    ],
    serialized_start=623,
    serialized_end=776,
)


_STREAMINGRECOGNITIONCONFIG = _descriptor.Descriptor(
    name="StreamingRecognitionConfig",
    full_name="google.cloud.speech.v1.StreamingRecognitionConfig",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="config",
            full_name="google.cloud.speech.v1.StreamingRecognitionConfig.config",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=_b("\340A\002"),
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="single_utterance",
            full_name="google.cloud.speech.v1.StreamingRecognitionConfig.single_utterance",
            index=1,
            number=2,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="interim_results",
            full_name="google.cloud.speech.v1.StreamingRecognitionConfig.interim_results",
            index=2,
            number=3,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=779,
    serialized_end=922,
)


_RECOGNITIONCONFIG = _descriptor.Descriptor(
    name="RecognitionConfig",
    full_name="google.cloud.speech.v1.RecognitionConfig",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="encoding",
            full_name="google.cloud.speech.v1.RecognitionConfig.encoding",
            index=0,
            number=1,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="sample_rate_hertz",
            full_name="google.cloud.speech.v1.RecognitionConfig.sample_rate_hertz",
            index=1,
            number=2,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="audio_channel_count",
            full_name="google.cloud.speech.v1.RecognitionConfig.audio_channel_count",
            index=2,
            number=7,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="enable_separate_recognition_per_channel",
            full_name="google.cloud.speech.v1.RecognitionConfig.enable_separate_recognition_per_channel",
            index=3,
            number=12,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="language_code",
            full_name="google.cloud.speech.v1.RecognitionConfig.language_code",
            index=4,
            number=3,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=_b("\340A\002"),
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="max_alternatives",
            full_name="google.cloud.speech.v1.RecognitionConfig.max_alternatives",
            index=5,
            number=4,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="profanity_filter",
            full_name="google.cloud.speech.v1.RecognitionConfig.profanity_filter",
            index=6,
            number=5,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="speech_contexts",
            full_name="google.cloud.speech.v1.RecognitionConfig.speech_contexts",
            index=7,
            number=6,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="enable_word_time_offsets",
            full_name="google.cloud.speech.v1.RecognitionConfig.enable_word_time_offsets",
            index=8,
            number=8,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="enable_automatic_punctuation",
            full_name="google.cloud.speech.v1.RecognitionConfig.enable_automatic_punctuation",
            index=9,
            number=11,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="diarization_config",
            full_name="google.cloud.speech.v1.RecognitionConfig.diarization_config",
            index=10,
            number=19,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="metadata",
            full_name="google.cloud.speech.v1.RecognitionConfig.metadata",
            index=11,
            number=9,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="model",
            full_name="google.cloud.speech.v1.RecognitionConfig.model",
            index=12,
            number=13,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="use_enhanced",
            full_name="google.cloud.speech.v1.RecognitionConfig.use_enhanced",
            index=13,
            number=14,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[_RECOGNITIONCONFIG_AUDIOENCODING],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=925,
    serialized_end=1660,
)


_SPEAKERDIARIZATIONCONFIG = _descriptor.Descriptor(
    name="SpeakerDiarizationConfig",
    full_name="google.cloud.speech.v1.SpeakerDiarizationConfig",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="enable_speaker_diarization",
            full_name="google.cloud.speech.v1.SpeakerDiarizationConfig.enable_speaker_diarization",
            index=0,
            number=1,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="min_speaker_count",
            full_name="google.cloud.speech.v1.SpeakerDiarizationConfig.min_speaker_count",
            index=1,
            number=2,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="max_speaker_count",
            full_name="google.cloud.speech.v1.SpeakerDiarizationConfig.max_speaker_count",
            index=2,
            number=3,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="speaker_tag",
            full_name="google.cloud.speech.v1.SpeakerDiarizationConfig.speaker_tag",
            index=3,
            number=5,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=_b("\030\001\340A\003"),
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=1663,
    serialized_end=1807,
)


_RECOGNITIONMETADATA = _descriptor.Descriptor(
    name="RecognitionMetadata",
    full_name="google.cloud.speech.v1.RecognitionMetadata",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="interaction_type",
            full_name="google.cloud.speech.v1.RecognitionMetadata.interaction_type",
            index=0,
            number=1,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="industry_naics_code_of_audio",
            full_name="google.cloud.speech.v1.RecognitionMetadata.industry_naics_code_of_audio",
            index=1,
            number=3,
            type=13,
            cpp_type=3,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="microphone_distance",
            full_name="google.cloud.speech.v1.RecognitionMetadata.microphone_distance",
            index=2,
            number=4,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="original_media_type",
            full_name="google.cloud.speech.v1.RecognitionMetadata.original_media_type",
            index=3,
            number=5,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="recording_device_type",
            full_name="google.cloud.speech.v1.RecognitionMetadata.recording_device_type",
            index=4,
            number=6,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="recording_device_name",
            full_name="google.cloud.speech.v1.RecognitionMetadata.recording_device_name",
            index=5,
            number=7,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="original_mime_type",
            full_name="google.cloud.speech.v1.RecognitionMetadata.original_mime_type",
            index=6,
            number=8,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="audio_topic",
            full_name="google.cloud.speech.v1.RecognitionMetadata.audio_topic",
            index=7,
            number=10,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[
        _RECOGNITIONMETADATA_INTERACTIONTYPE,
        _RECOGNITIONMETADATA_MICROPHONEDISTANCE,
        _RECOGNITIONMETADATA_ORIGINALMEDIATYPE,
        _RECOGNITIONMETADATA_RECORDINGDEVICETYPE,
    ],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=1810,
    serialized_end=2866,
)


_SPEECHCONTEXT = _descriptor.Descriptor(
    name="SpeechContext",
    full_name="google.cloud.speech.v1.SpeechContext",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="phrases",
            full_name="google.cloud.speech.v1.SpeechContext.phrases",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        )
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=2868,
    serialized_end=2900,
)


_RECOGNITIONAUDIO = _descriptor.Descriptor(
    name="RecognitionAudio",
    full_name="google.cloud.speech.v1.RecognitionAudio",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="content",
            full_name="google.cloud.speech.v1.RecognitionAudio.content",
            index=0,
            number=1,
            type=12,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b(""),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="uri",
            full_name="google.cloud.speech.v1.RecognitionAudio.uri",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[
        _descriptor.OneofDescriptor(
            name="audio_source",
            full_name="google.cloud.speech.v1.RecognitionAudio.audio_source",
            index=0,
            containing_type=None,
            fields=[],
        )
    ],
    serialized_start=2902,
    serialized_end=2970,
)


_RECOGNIZERESPONSE = _descriptor.Descriptor(
    name="RecognizeResponse",
    full_name="google.cloud.speech.v1.RecognizeResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="results",
            full_name="google.cloud.speech.v1.RecognizeResponse.results",
            index=0,
            number=2,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        )
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=2972,
    serialized_end=3057,
)


_LONGRUNNINGRECOGNIZERESPONSE = _descriptor.Descriptor(
    name="LongRunningRecognizeResponse",
    full_name="google.cloud.speech.v1.LongRunningRecognizeResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="results",
            full_name="google.cloud.speech.v1.LongRunningRecognizeResponse.results",
            index=0,
            number=2,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        )
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=3059,
    serialized_end=3155,
)


_LONGRUNNINGRECOGNIZEMETADATA = _descriptor.Descriptor(
    name="LongRunningRecognizeMetadata",
    full_name="google.cloud.speech.v1.LongRunningRecognizeMetadata",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="progress_percent",
            full_name="google.cloud.speech.v1.LongRunningRecognizeMetadata.progress_percent",
            index=0,
            number=1,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="start_time",
            full_name="google.cloud.speech.v1.LongRunningRecognizeMetadata.start_time",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="last_update_time",
            full_name="google.cloud.speech.v1.LongRunningRecognizeMetadata.last_update_time",
            index=2,
            number=3,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=3158,
    serialized_end=3316,
)


_STREAMINGRECOGNIZERESPONSE = _descriptor.Descriptor(
    name="StreamingRecognizeResponse",
    full_name="google.cloud.speech.v1.StreamingRecognizeResponse",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="error",
            full_name="google.cloud.speech.v1.StreamingRecognizeResponse.error",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="results",
            full_name="google.cloud.speech.v1.StreamingRecognizeResponse.results",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="speech_event_type",
            full_name="google.cloud.speech.v1.StreamingRecognizeResponse.speech_event_type",
            index=2,
            number=4,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[_STREAMINGRECOGNIZERESPONSE_SPEECHEVENTTYPE],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=3319,
    serialized_end=3624,
)


_STREAMINGRECOGNITIONRESULT = _descriptor.Descriptor(
    name="StreamingRecognitionResult",
    full_name="google.cloud.speech.v1.StreamingRecognitionResult",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="alternatives",
            full_name="google.cloud.speech.v1.StreamingRecognitionResult.alternatives",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="is_final",
            full_name="google.cloud.speech.v1.StreamingRecognitionResult.is_final",
            index=1,
            number=2,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="stability",
            full_name="google.cloud.speech.v1.StreamingRecognitionResult.stability",
            index=2,
            number=3,
            type=2,
            cpp_type=6,
            label=1,
            has_default_value=False,
            default_value=float(0),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="result_end_time",
            full_name="google.cloud.speech.v1.StreamingRecognitionResult.result_end_time",
            index=3,
            number=4,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="channel_tag",
            full_name="google.cloud.speech.v1.StreamingRecognitionResult.channel_tag",
            index=4,
            number=5,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="language_code",
            full_name="google.cloud.speech.v1.StreamingRecognitionResult.language_code",
            index=5,
            number=6,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=_b("\340A\003"),
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=3627,
    serialized_end=3869,
)


_SPEECHRECOGNITIONRESULT = _descriptor.Descriptor(
    name="SpeechRecognitionResult",
    full_name="google.cloud.speech.v1.SpeechRecognitionResult",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="alternatives",
            full_name="google.cloud.speech.v1.SpeechRecognitionResult.alternatives",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="channel_tag",
            full_name="google.cloud.speech.v1.SpeechRecognitionResult.channel_tag",
            index=1,
            number=2,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=3871,
    serialized_end=3993,
)


_SPEECHRECOGNITIONALTERNATIVE = _descriptor.Descriptor(
    name="SpeechRecognitionAlternative",
    full_name="google.cloud.speech.v1.SpeechRecognitionAlternative",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="transcript",
            full_name="google.cloud.speech.v1.SpeechRecognitionAlternative.transcript",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="confidence",
            full_name="google.cloud.speech.v1.SpeechRecognitionAlternative.confidence",
            index=1,
            number=2,
            type=2,
            cpp_type=6,
            label=1,
            has_default_value=False,
            default_value=float(0),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="words",
            full_name="google.cloud.speech.v1.SpeechRecognitionAlternative.words",
            index=2,
            number=3,
            type=11,
            cpp_type=10,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=3995,
    serialized_end=4114,
)


_WORDINFO = _descriptor.Descriptor(
    name="WordInfo",
    full_name="google.cloud.speech.v1.WordInfo",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="start_time",
            full_name="google.cloud.speech.v1.WordInfo.start_time",
            index=0,
            number=1,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="end_time",
            full_name="google.cloud.speech.v1.WordInfo.end_time",
            index=1,
            number=2,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="word",
            full_name="google.cloud.speech.v1.WordInfo.word",
            index=2,
            number=3,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=_b("").decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="speaker_tag",
            full_name="google.cloud.speech.v1.WordInfo.speaker_tag",
            index=3,
            number=5,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=_b("\340A\003"),
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=4117,
    serialized_end=4259,
)

_RECOGNIZEREQUEST.fields_by_name["config"].message_type = _RECOGNITIONCONFIG
_RECOGNIZEREQUEST.fields_by_name["audio"].message_type = _RECOGNITIONAUDIO
_LONGRUNNINGRECOGNIZEREQUEST.fields_by_name["config"].message_type = _RECOGNITIONCONFIG
_LONGRUNNINGRECOGNIZEREQUEST.fields_by_name["audio"].message_type = _RECOGNITIONAUDIO
_STREAMINGRECOGNIZEREQUEST.fields_by_name[
    "streaming_config"
].message_type = _STREAMINGRECOGNITIONCONFIG
_STREAMINGRECOGNIZEREQUEST.oneofs_by_name["streaming_request"].fields.append(
    _STREAMINGRECOGNIZEREQUEST.fields_by_name["streaming_config"]
)
_STREAMINGRECOGNIZEREQUEST.fields_by_name[
    "streaming_config"
].containing_oneof = _STREAMINGRECOGNIZEREQUEST.oneofs_by_name["streaming_request"]
_STREAMINGRECOGNIZEREQUEST.oneofs_by_name["streaming_request"].fields.append(
    _STREAMINGRECOGNIZEREQUEST.fields_by_name["audio_content"]
)
_STREAMINGRECOGNIZEREQUEST.fields_by_name[
    "audio_content"
].containing_oneof = _STREAMINGRECOGNIZEREQUEST.oneofs_by_name["streaming_request"]
_STREAMINGRECOGNITIONCONFIG.fields_by_name["config"].message_type = _RECOGNITIONCONFIG
_RECOGNITIONCONFIG.fields_by_name[
    "encoding"
].enum_type = _RECOGNITIONCONFIG_AUDIOENCODING
_RECOGNITIONCONFIG.fields_by_name["speech_contexts"].message_type = _SPEECHCONTEXT
_RECOGNITIONCONFIG.fields_by_name[
    "diarization_config"
].message_type = _SPEAKERDIARIZATIONCONFIG
_RECOGNITIONCONFIG.fields_by_name["metadata"].message_type = _RECOGNITIONMETADATA
_RECOGNITIONCONFIG_AUDIOENCODING.containing_type = _RECOGNITIONCONFIG
_RECOGNITIONMETADATA.fields_by_name[
    "interaction_type"
].enum_type = _RECOGNITIONMETADATA_INTERACTIONTYPE
_RECOGNITIONMETADATA.fields_by_name[
    "microphone_distance"
].enum_type = _RECOGNITIONMETADATA_MICROPHONEDISTANCE
_RECOGNITIONMETADATA.fields_by_name[
    "original_media_type"
].enum_type = _RECOGNITIONMETADATA_ORIGINALMEDIATYPE
_RECOGNITIONMETADATA.fields_by_name[
    "recording_device_type"
].enum_type = _RECOGNITIONMETADATA_RECORDINGDEVICETYPE
_RECOGNITIONMETADATA_INTERACTIONTYPE.containing_type = _RECOGNITIONMETADATA
_RECOGNITIONMETADATA_MICROPHONEDISTANCE.containing_type = _RECOGNITIONMETADATA
_RECOGNITIONMETADATA_ORIGINALMEDIATYPE.containing_type = _RECOGNITIONMETADATA
_RECOGNITIONMETADATA_RECORDINGDEVICETYPE.containing_type = _RECOGNITIONMETADATA
_RECOGNITIONAUDIO.oneofs_by_name["audio_source"].fields.append(
    _RECOGNITIONAUDIO.fields_by_name["content"]
)
_RECOGNITIONAUDIO.fields_by_name[
    "content"
].containing_oneof = _RECOGNITIONAUDIO.oneofs_by_name["audio_source"]
_RECOGNITIONAUDIO.oneofs_by_name["audio_source"].fields.append(
    _RECOGNITIONAUDIO.fields_by_name["uri"]
)
_RECOGNITIONAUDIO.fields_by_name[
    "uri"
].containing_oneof = _RECOGNITIONAUDIO.oneofs_by_name["audio_source"]
_RECOGNIZERESPONSE.fields_by_name["results"].message_type = _SPEECHRECOGNITIONRESULT
_LONGRUNNINGRECOGNIZERESPONSE.fields_by_name[
    "results"
].message_type = _SPEECHRECOGNITIONRESULT
_LONGRUNNINGRECOGNIZEMETADATA.fields_by_name[
    "start_time"
].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_LONGRUNNINGRECOGNIZEMETADATA.fields_by_name[
    "last_update_time"
].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_STREAMINGRECOGNIZERESPONSE.fields_by_name[
    "error"
].message_type = google_dot_rpc_dot_status__pb2._STATUS
_STREAMINGRECOGNIZERESPONSE.fields_by_name[
    "results"
].message_type = _STREAMINGRECOGNITIONRESULT
_STREAMINGRECOGNIZERESPONSE.fields_by_name[
    "speech_event_type"
].enum_type = _STREAMINGRECOGNIZERESPONSE_SPEECHEVENTTYPE
_STREAMINGRECOGNIZERESPONSE_SPEECHEVENTTYPE.containing_type = (
    _STREAMINGRECOGNIZERESPONSE
)
_STREAMINGRECOGNITIONRESULT.fields_by_name[
    "alternatives"
].message_type = _SPEECHRECOGNITIONALTERNATIVE
_STREAMINGRECOGNITIONRESULT.fields_by_name[
    "result_end_time"
].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_SPEECHRECOGNITIONRESULT.fields_by_name[
    "alternatives"
].message_type = _SPEECHRECOGNITIONALTERNATIVE
_SPEECHRECOGNITIONALTERNATIVE.fields_by_name["words"].message_type = _WORDINFO
_WORDINFO.fields_by_name[
    "start_time"
].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_WORDINFO.fields_by_name[
    "end_time"
].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
DESCRIPTOR.message_types_by_name["RecognizeRequest"] = _RECOGNIZEREQUEST
DESCRIPTOR.message_types_by_name[
    "LongRunningRecognizeRequest"
] = _LONGRUNNINGRECOGNIZEREQUEST
DESCRIPTOR.message_types_by_name[
    "StreamingRecognizeRequest"
] = _STREAMINGRECOGNIZEREQUEST
DESCRIPTOR.message_types_by_name[
    "StreamingRecognitionConfig"
] = _STREAMINGRECOGNITIONCONFIG
DESCRIPTOR.message_types_by_name["RecognitionConfig"] = _RECOGNITIONCONFIG
DESCRIPTOR.message_types_by_name["SpeakerDiarizationConfig"] = _SPEAKERDIARIZATIONCONFIG
DESCRIPTOR.message_types_by_name["RecognitionMetadata"] = _RECOGNITIONMETADATA
DESCRIPTOR.message_types_by_name["SpeechContext"] = _SPEECHCONTEXT
DESCRIPTOR.message_types_by_name["RecognitionAudio"] = _RECOGNITIONAUDIO
DESCRIPTOR.message_types_by_name["RecognizeResponse"] = _RECOGNIZERESPONSE
DESCRIPTOR.message_types_by_name[
    "LongRunningRecognizeResponse"
] = _LONGRUNNINGRECOGNIZERESPONSE
DESCRIPTOR.message_types_by_name[
    "LongRunningRecognizeMetadata"
] = _LONGRUNNINGRECOGNIZEMETADATA
DESCRIPTOR.message_types_by_name[
    "StreamingRecognizeResponse"
] = _STREAMINGRECOGNIZERESPONSE
DESCRIPTOR.message_types_by_name[
    "StreamingRecognitionResult"
] = _STREAMINGRECOGNITIONRESULT
DESCRIPTOR.message_types_by_name["SpeechRecognitionResult"] = _SPEECHRECOGNITIONRESULT
DESCRIPTOR.message_types_by_name[
    "SpeechRecognitionAlternative"
] = _SPEECHRECOGNITIONALTERNATIVE
DESCRIPTOR.message_types_by_name["WordInfo"] = _WORDINFO
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RecognizeRequest = _reflection.GeneratedProtocolMessageType(
    "RecognizeRequest",
    (_message.Message,),
    dict(
        DESCRIPTOR=_RECOGNIZEREQUEST,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""The top-level message sent by the client for the ``Recognize`` method.
  Attributes:
      config:
          Required. Provides information to the recognizer that
          specifies how to process the request.
      audio:
          Required. The audio data to be recognized.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.RecognizeRequest)
    ),
)
_sym_db.RegisterMessage(RecognizeRequest)

LongRunningRecognizeRequest = _reflection.GeneratedProtocolMessageType(
    "LongRunningRecognizeRequest",
    (_message.Message,),
    dict(
        DESCRIPTOR=_LONGRUNNINGRECOGNIZEREQUEST,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""The top-level message sent by the client for the
  ``LongRunningRecognize`` method.
  Attributes:
      config:
          Required. Provides information to the recognizer that
          specifies how to process the request.
      audio:
          Required. The audio data to be recognized.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.LongRunningRecognizeRequest)
    ),
)
_sym_db.RegisterMessage(LongRunningRecognizeRequest)

StreamingRecognizeRequest = _reflection.GeneratedProtocolMessageType(
    "StreamingRecognizeRequest",
    (_message.Message,),
    dict(
        DESCRIPTOR=_STREAMINGRECOGNIZEREQUEST,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""The top-level message sent by the client for the
  ``StreamingRecognize`` method. Multiple ``StreamingRecognizeRequest``
  messages are sent. The first message must contain a
  ``streaming_config`` message and must not contain ``audio_content``.
  All subsequent messages must contain ``audio_content`` and must not
  contain a ``streaming_config`` message.
  Attributes:
      streaming_request:
          The streaming request, which is either a streaming config or
          audio content.
      streaming_config:
          Provides information to the recognizer that specifies how to
          process the request. The first ``StreamingRecognizeRequest``
          message must contain a ``streaming_config`` message.
      audio_content:
          The audio data to be recognized. Sequential chunks of audio
          data are sent in sequential ``StreamingRecognizeRequest``
          messages. The first ``StreamingRecognizeRequest`` message must
          not contain ``audio_content`` data and all subsequent
          ``StreamingRecognizeRequest`` messages must contain
          ``audio_content`` data. The audio bytes must be encoded as
          specified in ``RecognitionConfig``. Note: as with all bytes
          fields, proto buffers use a pure binary representation (not
          base64). See `content limits <https://cloud.google.com/speech-
          to-text/quotas#content>`__.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.StreamingRecognizeRequest)
    ),
)
_sym_db.RegisterMessage(StreamingRecognizeRequest)

StreamingRecognitionConfig = _reflection.GeneratedProtocolMessageType(
    "StreamingRecognitionConfig",
    (_message.Message,),
    dict(
        DESCRIPTOR=_STREAMINGRECOGNITIONCONFIG,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""Provides information to the recognizer that specifies how to process
  the request.
  Attributes:
      config:
          Required. Provides information to the recognizer that
          specifies how to process the request.
      single_utterance:
          If ``false`` or omitted, the recognizer will perform
          continuous recognition (continuing to wait for and process
          audio even if the user pauses speaking) until the client
          closes the input stream (gRPC API) or until the maximum time
          limit has been reached. May return multiple
          ``StreamingRecognitionResult``\ s with the ``is_final`` flag
          set to ``true``.  If ``true``, the recognizer will detect a
          single spoken utterance. When it detects that the user has
          paused or stopped speaking, it will return an
          ``END_OF_SINGLE_UTTERANCE`` event and cease recognition. It
          will return no more than one ``StreamingRecognitionResult``
          with the ``is_final`` flag set to ``true``.
      interim_results:
          If ``true``, interim results (tentative hypotheses) may be
          returned as they become available (these interim results are
          indicated with the ``is_final=false`` flag). If ``false`` or
          omitted, only ``is_final=true`` result(s) are returned.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.StreamingRecognitionConfig)
    ),
)
_sym_db.RegisterMessage(StreamingRecognitionConfig)

RecognitionConfig = _reflection.GeneratedProtocolMessageType(
    "RecognitionConfig",
    (_message.Message,),
    dict(
        DESCRIPTOR=_RECOGNITIONCONFIG,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""Provides information to the recognizer that specifies how to process
  the request.
  Attributes:
      encoding:
          Encoding of audio data sent in all ``RecognitionAudio``
          messages. This field is optional for ``FLAC`` and ``WAV``
          audio files and required for all other audio formats. For
          details, see [AudioEncoding][google.cloud.speech.v1.Recognitio
          nConfig.AudioEncoding].
      sample_rate_hertz:
          Sample rate in Hertz of the audio data sent in all
          ``RecognitionAudio`` messages. Valid values are: 8000-48000.
          16000 is optimal. For best results, set the sampling rate of
          the audio source to 16000 Hz. If that's not possible, use the
          native sample rate of the audio source (instead of re-
          sampling). This field is optional for FLAC and WAV audio
          files, but is required for all other audio formats. For
          details, see [AudioEncoding][google.cloud.speech.v1.Recognitio
          nConfig.AudioEncoding].
      audio_channel_count:
          The number of channels in the input audio data. ONLY set this
          for MULTI-CHANNEL recognition. Valid values for LINEAR16 and
          FLAC are ``1``-``8``. Valid values for OGG\_OPUS are
          '1'-'254'. Valid value for MULAW, AMR, AMR\_WB and
          SPEEX\_WITH\_HEADER\_BYTE is only ``1``. If ``0`` or omitted,
          defaults to one channel (mono). Note: We only recognize the
          first channel by default. To perform independent recognition
          on each channel set
          ``enable_separate_recognition_per_channel`` to 'true'.
      enable_separate_recognition_per_channel:
          This needs to be set to ``true`` explicitly and
          ``audio_channel_count`` > 1 to get each channel recognized
          separately. The recognition result will contain a
          ``channel_tag`` field to state which channel that result
          belongs to. If this is not true, we will only recognize the
          first channel. The request is billed cumulatively for all
          channels recognized: ``audio_channel_count`` multiplied by the
          length of the audio.
      language_code:
          Required. The language of the supplied audio as a `BCP-47
          <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__ language
          tag. Example: "en-US". See `Language Support
          <https://cloud.google.com/speech-to-text/docs/languages>`__
          for a list of the currently supported language codes.
      max_alternatives:
          Maximum number of recognition hypotheses to be returned.
          Specifically, the maximum number of
          ``SpeechRecognitionAlternative`` messages within each
          ``SpeechRecognitionResult``. The server may return fewer than
          ``max_alternatives``. Valid values are ``0``-``30``. A value
          of ``0`` or ``1`` will return a maximum of one. If omitted,
          will return a maximum of one.
      profanity_filter:
          If set to ``true``, the server will attempt to filter out
          profanities, replacing all but the initial character in each
          filtered word with asterisks, e.g. "f\*\*\*". If set to
          ``false`` or omitted, profanities won't be filtered out.
      speech_contexts:
          Array of
          [SpeechContext][google.cloud.speech.v1.SpeechContext]. A means
          to provide context to assist the speech recognition. For more
          information, see `speech adaptation
          <https://cloud.google.com/speech-to-text/docs/context-
          strength>`__.
      enable_word_time_offsets:
          If ``true``, the top result includes a list of words and the
          start and end time offsets (timestamps) for those words. If
          ``false``, no word-level time offset information is returned.
          The default is ``false``.
      enable_automatic_punctuation:
          If 'true', adds punctuation to recognition result hypotheses.
          This feature is only available in select languages. Setting
          this for requests in other languages has no effect at all. The
          default 'false' value does not add punctuation to result
          hypotheses. Note: This is currently offered as an experimental
          service, complimentary to all users. In the future this may be
          exclusively available as a premium feature.
      diarization_config:
          Config to enable speaker diarization and set additional
          parameters to make diarization better suited for your
          application. Note: When this is enabled, we send all the words
          from the beginning of the audio for the top alternative in
          every consecutive STREAMING responses. This is done in order
          to improve our speaker tags as our models learn to identify
          the speakers in the conversation over time. For non-streaming
          requests, the diarization results will be provided only in the
          top alternative of the FINAL SpeechRecognitionResult.
      metadata:
          Metadata regarding this request.
      model:
          Which model to select for the given request. Select the model
          best suited to your domain to get best results. If a model is
          not explicitly specified, then we auto-select a model based on
          the parameters in the RecognitionConfig.  .. raw:: html
          <table>  .. raw:: html     <tr>  ::      <td><b>Model</b></td>
          <td><b>Description</b></td>  .. raw:: html     </tr>  .. raw::
          html     <tr>  ::
          <td><code>command_and_search</code></td>     <td>Best for
          short queries such as voice commands or voice search.</td>  ..
          raw:: html     </tr>  .. raw:: html     <tr>  ::
          <td><code>phone_call</code></td>     <td>Best for audio that
          originated from a phone call (typically     recorded at an
          8khz sampling rate).</td>  .. raw:: html     </tr>  .. raw::
          html     <tr>  ::      <td><code>video</code></td>
          <td>Best for audio that originated from from video or includes
          multiple         speakers. Ideally the audio is recorded at a
          16khz or greater         sampling rate. This is a premium
          model that costs more than the         standard rate.</td>  ..
          raw:: html     </tr>  .. raw:: html     <tr>  ::
          <td><code>default</code></td>     <td>Best for audio that is
          not one of the specific audio models.         For example,
          long-form audio. Ideally the audio is high-fidelity,
          recorded at a 16khz or greater sampling rate.</td>  .. raw::
          html     </tr>  .. raw:: html     </table>
      use_enhanced:
          Set to true to use an enhanced model for speech recognition.
          If ``use_enhanced`` is set to true and the ``model`` field is
          not set, then an appropriate enhanced model is chosen if an
          enhanced model exists for the audio.  If ``use_enhanced`` is
          true and an enhanced version of the specified model does not
          exist, then the speech is recognized using the standard
          version of the specified model.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.RecognitionConfig)
    ),
)
_sym_db.RegisterMessage(RecognitionConfig)

SpeakerDiarizationConfig = _reflection.GeneratedProtocolMessageType(
    "SpeakerDiarizationConfig",
    (_message.Message,),
    dict(
        DESCRIPTOR=_SPEAKERDIARIZATIONCONFIG,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""Config to enable speaker diarization.
  Attributes:
      enable_speaker_diarization:
          If 'true', enables speaker detection for each recognized word
          in the top alternative of the recognition result using a
          speaker\_tag provided in the WordInfo.
      min_speaker_count:
          Minimum number of speakers in the conversation. This range
          gives you more flexibility by allowing the system to
          automatically determine the correct number of speakers. If not
          set, the default value is 2.
      max_speaker_count:
          Maximum number of speakers in the conversation. This range
          gives you more flexibility by allowing the system to
          automatically determine the correct number of speakers. If not
          set, the default value is 6.
      speaker_tag:
          Unused.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.SpeakerDiarizationConfig)
    ),
)
_sym_db.RegisterMessage(SpeakerDiarizationConfig)

RecognitionMetadata = _reflection.GeneratedProtocolMessageType(
    "RecognitionMetadata",
    (_message.Message,),
    dict(
        DESCRIPTOR=_RECOGNITIONMETADATA,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""Description of audio data to be recognized.
  Attributes:
      interaction_type:
          The use case most closely describing the audio content to be
          recognized.
      industry_naics_code_of_audio:
          The industry vertical to which this speech recognition request
          most closely applies. This is most indicative of the topics
          contained in the audio. Use the 6-digit NAICS code to identify
          the industry vertical - see https://www.naics.com/search/.
      microphone_distance:
          The audio type that most closely describes the audio being
          recognized.
      original_media_type:
          The original media the speech was recorded on.
      recording_device_type:
          The type of device the speech was recorded with.
      recording_device_name:
          The device used to make the recording. Examples 'Nexus 5X' or
          'Polycom SoundStation IP 6000' or 'POTS' or 'VoIP' or
          'Cardioid Microphone'.
      original_mime_type:
          Mime type of the original audio file. For example
          ``audio/m4a``, ``audio/x-alaw-basic``, ``audio/mp3``,
          ``audio/3gpp``. A list of possible audio mime types is
          maintained at http://www.iana.org/assignments/media-
          types/media-types.xhtml#audio
      audio_topic:
          Description of the content. Eg. "Recordings of federal supreme
          court hearings from 2012".
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.RecognitionMetadata)
    ),
)
_sym_db.RegisterMessage(RecognitionMetadata)

SpeechContext = _reflection.GeneratedProtocolMessageType(
    "SpeechContext",
    (_message.Message,),
    dict(
        DESCRIPTOR=_SPEECHCONTEXT,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""Provides "hints" to the speech recognizer to favor specific words and
  phrases in the results.
  Attributes:
      phrases:
          A list of strings containing words and phrases "hints" so that
          the speech recognition is more likely to recognize them. This
          can be used to improve the accuracy for specific words and
          phrases, for example, if specific commands are typically
          spoken by the user. This can also be used to add additional
          words to the vocabulary of the recognizer. See `usage limits
          <https://cloud.google.com/speech-to-text/quotas#content>`__.
          List items can also be set to classes for groups of words that
          represent common concepts that occur in natural language. For
          example, rather than providing phrase hints for every month of
          the year, using the $MONTH class improves the likelihood of
          correctly transcribing audio that includes months.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.SpeechContext)
    ),
)
_sym_db.RegisterMessage(SpeechContext)

RecognitionAudio = _reflection.GeneratedProtocolMessageType(
    "RecognitionAudio",
    (_message.Message,),
    dict(
        DESCRIPTOR=_RECOGNITIONAUDIO,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""Contains audio data in the encoding specified in the
  ``RecognitionConfig``. Either ``content`` or ``uri`` must be supplied.
  Supplying both or neither returns [google.rpc.Code.INVALID\_ARGUMENT][
  google.rpc.Code.INVALID\_ARGUMENT]. See `content limits
  <https://cloud.google.com/speech-to-text/quotas#content>`__.
  Attributes:
      audio_source:
          The audio source, which is either inline content or a Google
          Cloud Storage uri.
      content:
          The audio data bytes encoded as specified in
          ``RecognitionConfig``. Note: as with all bytes fields, proto
          buffers use a pure binary representation, whereas JSON
          representations use base64.
      uri:
          URI that points to a file that contains audio data bytes as
          specified in ``RecognitionConfig``. The file must not be
          compressed (for example, gzip). Currently, only Google Cloud
          Storage URIs are supported, which must be specified in the
          following format: ``gs://bucket_name/object_name`` (other URI
          formats return [google.rpc.Code.INVALID\_ARGUMENT][google.rpc.
          Code.INVALID\_ARGUMENT]). For more information, see `Request
          URIs <https://cloud.google.com/storage/docs/reference-
          uris>`__.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.RecognitionAudio)
    ),
)
_sym_db.RegisterMessage(RecognitionAudio)

RecognizeResponse = _reflection.GeneratedProtocolMessageType(
    "RecognizeResponse",
    (_message.Message,),
    dict(
        DESCRIPTOR=_RECOGNIZERESPONSE,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""The only message returned to the client by the ``Recognize`` method.
  It contains the result as zero or more sequential
  ``SpeechRecognitionResult`` messages.
  Attributes:
      results:
          Sequential list of transcription results corresponding to
          sequential portions of audio.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.RecognizeResponse)
    ),
)
_sym_db.RegisterMessage(RecognizeResponse)

LongRunningRecognizeResponse = _reflection.GeneratedProtocolMessageType(
    "LongRunningRecognizeResponse",
    (_message.Message,),
    dict(
        DESCRIPTOR=_LONGRUNNINGRECOGNIZERESPONSE,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""The only message returned to the client by the
  ``LongRunningRecognize`` method. It contains the result as zero or
  more sequential ``SpeechRecognitionResult`` messages. It is included
  in the ``result.response`` field of the ``Operation`` returned by the
  ``GetOperation`` call of the ``google::longrunning::Operations``
  service.
  Attributes:
      results:
          Sequential list of transcription results corresponding to
          sequential portions of audio.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.LongRunningRecognizeResponse)
    ),
)
_sym_db.RegisterMessage(LongRunningRecognizeResponse)

LongRunningRecognizeMetadata = _reflection.GeneratedProtocolMessageType(
    "LongRunningRecognizeMetadata",
    (_message.Message,),
    dict(
        DESCRIPTOR=_LONGRUNNINGRECOGNIZEMETADATA,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""Describes the progress of a long-running ``LongRunningRecognize``
  call. It is included in the ``metadata`` field of the ``Operation``
  returned by the ``GetOperation`` call of the
  ``google::longrunning::Operations`` service.
  Attributes:
      progress_percent:
          Approximate percentage of audio processed thus far. Guaranteed
          to be 100 when the audio is fully processed and the results
          are available.
      start_time:
          Time when the request was received.
      last_update_time:
          Time of the most recent processing update.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.LongRunningRecognizeMetadata)
    ),
)
_sym_db.RegisterMessage(LongRunningRecognizeMetadata)

StreamingRecognizeResponse = _reflection.GeneratedProtocolMessageType(
    "StreamingRecognizeResponse",
    (_message.Message,),
    dict(
        DESCRIPTOR=_STREAMINGRECOGNIZERESPONSE,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""\ ``StreamingRecognizeResponse`` is the only message returned to the
  client by ``StreamingRecognize``. A series of zero or more
  ``StreamingRecognizeResponse`` messages are streamed back to the
  client. If there is no recognizable audio, and ``single_utterance`` is
  set to false, then no messages are streamed back to the client.
  Here's an example of a series of ten ``StreamingRecognizeResponse``\ s
  that might be returned while processing audio:  1. results {
  alternatives { transcript: "tube" } stability: 0.01 }  2. results {
  alternatives { transcript: "to be a" } stability: 0.01 }  3. results {
  alternatives { transcript: "to be" } stability: 0.9 }    results {
  alternatives { transcript: " or not to be" } stability:    0.01 }  4.
  results { alternatives { transcript: "to be or not to be" confidence:
  0.92 } alternatives { transcript: "to bee or not to bee" } is\_final:
  true }  5. results { alternatives { transcript: " that's" } stability:
  0.01 }  6. results { alternatives { transcript: " that is" }
  stability: 0.9 }    results { alternatives { transcript: " the
  question" } stability:    0.01 }  7. results { alternatives {
  transcript: " that is the question"    confidence: 0.98 } alternatives
  { transcript: " that was the    question" } is\_final: true }  Notes:
  -  Only two of the above responses #4 and #7 contain final results;
  they    are indicated by ``is_final: true``. Concatenating these
  together    generates the full transcript: "to be or not to be that is
  the    question".  -  The others contain interim ``results``. #3 and
  #6 contain two interim    ``results``: the first portion has a high
  stability and is less    likely to change; the second portion has a
  low stability and is very    likely to change. A UI designer might
  choose to show only high    stability ``results``.  -  The specific
  ``stability`` and ``confidence`` values shown above are    only for
  illustrative purposes. Actual values may vary.  -  In each response,
  only one of these fields will be set: ``error``,
  ``speech_event_type``, or one or more (repeated) ``results``.
  Attributes:
      error:
          If set, returns a [google.rpc.Status][google.rpc.Status]
          message that specifies the error for the operation.
      results:
          This repeated list contains zero or more results that
          correspond to consecutive portions of the audio currently
          being processed. It contains zero or one ``is_final=true``
          result (the newly settled portion), followed by zero or more
          ``is_final=false`` results (the interim results).
      speech_event_type:
          Indicates the type of speech event.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.StreamingRecognizeResponse)
    ),
)
_sym_db.RegisterMessage(StreamingRecognizeResponse)

StreamingRecognitionResult = _reflection.GeneratedProtocolMessageType(
    "StreamingRecognitionResult",
    (_message.Message,),
    dict(
        DESCRIPTOR=_STREAMINGRECOGNITIONRESULT,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""A streaming speech recognition result corresponding to a portion of
  the audio that is currently being processed.
  Attributes:
      alternatives:
          May contain one or more recognition hypotheses (up to the
          maximum specified in ``max_alternatives``). These alternatives
          are ordered in terms of accuracy, with the top (first)
          alternative being the most probable, as ranked by the
          recognizer.
      is_final:
          If ``false``, this ``StreamingRecognitionResult`` represents
          an interim result that may change. If ``true``, this is the
          final time the speech service will return this particular
          ``StreamingRecognitionResult``, the recognizer will not return
          any further hypotheses for this portion of the transcript and
          corresponding audio.
      stability:
          An estimate of the likelihood that the recognizer will not
          change its guess about this interim result. Values range from
          0.0 (completely unstable) to 1.0 (completely stable). This
          field is only provided for interim results
          (``is_final=false``). The default of 0.0 is a sentinel value
          indicating ``stability`` was not set.
      result_end_time:
          Time offset of the end of this result relative to the
          beginning of the audio.
      channel_tag:
          For multi-channel audio, this is the channel number
          corresponding to the recognized result for the audio from that
          channel. For audio\_channel\_count = N, its output values can
          range from '1' to 'N'.
      language_code:
          The `BCP-47 <https://www.rfc-editor.org/rfc/bcp/bcp47.txt>`__
          language tag of the language in this result. This language
          code was detected to have the most likelihood of being spoken
          in the audio.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.StreamingRecognitionResult)
    ),
)
_sym_db.RegisterMessage(StreamingRecognitionResult)

SpeechRecognitionResult = _reflection.GeneratedProtocolMessageType(
    "SpeechRecognitionResult",
    (_message.Message,),
    dict(
        DESCRIPTOR=_SPEECHRECOGNITIONRESULT,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""A speech recognition result corresponding to a portion of the audio.
  Attributes:
      alternatives:
          May contain one or more recognition hypotheses (up to the
          maximum specified in ``max_alternatives``). These alternatives
          are ordered in terms of accuracy, with the top (first)
          alternative being the most probable, as ranked by the
          recognizer.
      channel_tag:
          For multi-channel audio, this is the channel number
          corresponding to the recognized result for the audio from that
          channel. For audio\_channel\_count = N, its output values can
          range from '1' to 'N'.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.SpeechRecognitionResult)
    ),
)
_sym_db.RegisterMessage(SpeechRecognitionResult)

SpeechRecognitionAlternative = _reflection.GeneratedProtocolMessageType(
    "SpeechRecognitionAlternative",
    (_message.Message,),
    dict(
        DESCRIPTOR=_SPEECHRECOGNITIONALTERNATIVE,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""Alternative hypotheses (a.k.a. n-best list).
  Attributes:
      transcript:
          Transcript text representing the words that the user spoke.
      confidence:
          The confidence estimate between 0.0 and 1.0. A higher number
          indicates an estimated greater likelihood that the recognized
          words are correct. This field is set only for the top
          alternative of a non-streaming result or, of a streaming
          result where ``is_final=true``. This field is not guaranteed
          to be accurate and users should not rely on it to be always
          provided. The default of 0.0 is a sentinel value indicating
          ``confidence`` was not set.
      words:
          A list of word-specific information for each recognized word.
          Note: When ``enable_speaker_diarization`` is true, you will
          see all the words from the beginning of the audio.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.SpeechRecognitionAlternative)
    ),
)
_sym_db.RegisterMessage(SpeechRecognitionAlternative)

WordInfo = _reflection.GeneratedProtocolMessageType(
    "WordInfo",
    (_message.Message,),
    dict(
        DESCRIPTOR=_WORDINFO,
        __module__="google.cloud.speech_v1.proto.cloud_speech_pb2",
        __doc__="""Word-specific information for recognized words.
  Attributes:
      start_time:
          Time offset relative to the beginning of the audio, and
          corresponding to the start of the spoken word. This field is
          only set if ``enable_word_time_offsets=true`` and only in the
          top hypothesis. This is an experimental feature and the
          accuracy of the time offset can vary.
      end_time:
          Time offset relative to the beginning of the audio, and
          corresponding to the end of the spoken word. This field is
          only set if ``enable_word_time_offsets=true`` and only in the
          top hypothesis. This is an experimental feature and the
          accuracy of the time offset can vary.
      word:
          The word corresponding to this set of information.
      speaker_tag:
          A distinct integer value is assigned for every speaker within
          the audio. This field specifies which one of those speakers
          was detected to have spoken this word. Value ranges from '1'
          to diarization\_speaker\_count. speaker\_tag is set if
          enable\_speaker\_diarization = 'true' and only in the top
          alternative.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.speech.v1.WordInfo)
    ),
)
_sym_db.RegisterMessage(WordInfo)


DESCRIPTOR._options = None
_RECOGNIZEREQUEST.fields_by_name["config"]._options = None
_RECOGNIZEREQUEST.fields_by_name["audio"]._options = None
_LONGRUNNINGRECOGNIZEREQUEST.fields_by_name["config"]._options = None
_LONGRUNNINGRECOGNIZEREQUEST.fields_by_name["audio"]._options = None
_STREAMINGRECOGNITIONCONFIG.fields_by_name["config"]._options = None
_RECOGNITIONCONFIG.fields_by_name["language_code"]._options = None
_SPEAKERDIARIZATIONCONFIG.fields_by_name["speaker_tag"]._options = None
_STREAMINGRECOGNITIONRESULT.fields_by_name["language_code"]._options = None
_WORDINFO.fields_by_name["speaker_tag"]._options = None

_SPEECH = _descriptor.ServiceDescriptor(
    name="Speech",
    full_name="google.cloud.speech.v1.Speech",
    file=DESCRIPTOR,
    index=0,
    serialized_options=_b(
        "\312A\025speech.googleapis.com\322A.https://www.googleapis.com/auth/cloud-platform"
    ),
    serialized_start=4262,
    serialized_end=4855,
    methods=[
        _descriptor.MethodDescriptor(
            name="Recognize",
            full_name="google.cloud.speech.v1.Speech.Recognize",
            index=0,
            containing_service=None,
            input_type=_RECOGNIZEREQUEST,
            output_type=_RECOGNIZERESPONSE,
            serialized_options=_b(
                '\202\323\344\223\002\031"\024/v1/speech:recognize:\001*\332A\014config,audio'
            ),
        ),
        _descriptor.MethodDescriptor(
            name="LongRunningRecognize",
            full_name="google.cloud.speech.v1.Speech.LongRunningRecognize",
            index=1,
            containing_service=None,
            input_type=_LONGRUNNINGRECOGNIZEREQUEST,
            output_type=google_dot_longrunning_dot_operations__pb2._OPERATION,
            serialized_options=_b(
                '\202\323\344\223\002$"\037/v1/speech:longrunningrecognize:\001*\332A\014config,audio\312A<\n\034LongRunningRecognizeResponse\022\034LongRunningRecognizeMetadata'
            ),
        ),
        _descriptor.MethodDescriptor(
            name="StreamingRecognize",
            full_name="google.cloud.speech.v1.Speech.StreamingRecognize",
            index=2,
            containing_service=None,
            input_type=_STREAMINGRECOGNIZEREQUEST,
            output_type=_STREAMINGRECOGNIZERESPONSE,
            serialized_options=None,
        ),
    ],
)
_sym_db.RegisterServiceDescriptor(_SPEECH)

DESCRIPTOR.services_by_name["Speech"] = _SPEECH

# @@protoc_insertion_point(module_scope)
